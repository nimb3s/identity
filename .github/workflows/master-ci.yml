name: Master CI Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        #os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
    - uses: actions/checkout@v2

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      env:
        ASPNETCORE_ENVIRONMENT : Development
      run: dotnet build --no-restore --configuration Release
#    - name: Test
#      run: dotnet test --no-build --verbosity normal

    # - name: Get branch name
    #   run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV      

    # - name: Upload Build Artifact
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: BuildArtifacts-${{env.RELEASE_VERSION}}
    #     path: .

  api_docker_image:
    
    needs: build

    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        #os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - name: Get docker tag name
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV      

      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Docker - API Building tagged image
        run: docker build -f "src/Nimb3s.Identity.Api/Dockerfile" --tag nimb3s/identity.api:latest --force-rm --label "com.microsoft.visual-studio.project-name=Nimb3s.Identity.Api" . --progress plain --no-cache
        #run: docker build -f "src/Nimb3s.Identity.Api/Dockerfile" --tag nimb3s/identity.api:${{env.RELEASE_VERSION}} --force-rm --label "com.microsoft.visual-studio.project-name=Nimb3s.Identity.Api" . --progress plain --no-cache
      - name: Docker - API Pushing tagged image to dockerhub
        run: docker push nimb3s/identity.api:latest
        #run: docker push nimb3s/identity.api:${{env.RELEASE_VERSION}}

  database_docker_image:
    needs: build
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      - name: Get docker tag name
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV      
      - name: Login to DockerHub Registry
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Docker - Database Building tagged image
        run: docker build -f "src/Nimb3s.Identity.Database/Dockerfile" --tag nimb3s/identity.database:latest --force-rm --label "com.microsoft.visual-studio.project-name=Nimb3s.Identity.Database" . --progress plain --no-cache
      - name: Docker - Database Pushing tagged image to dockerhub
        run: docker push nimb3s/identity.database:latest